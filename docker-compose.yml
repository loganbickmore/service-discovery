version: '3.4'

services:
  consul:
    image: consul:latest
    ports:
    - "8500:8500"
    environment:
    - SERVICE_IGNORE=true
    - CONSUL_BIND_INTERFACE=eth0

  registrator:
    image: gliderlabs/registrator:latest
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    depends_on:
      - consul
    command: -internal consul://consul:8500
      # we may wish to add extra cleanup and syncing options
      # http://gliderlabs.github.io/registrator/latest/user/run/
      # -cleanup
      # -resync 60


  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
      - "8443:443"
    environment:
      - SERVICE_NAME=nginx
      - SERVICE_80_NAME=nginx
      - SERVICE_443_NAME=nginx
      - SERVICE_TAGS=nginx,consul-template,load-balancing

  foo:
    build:
      context: .
      dockerfile: Dockerfile.demo-service
    environment:
      - SERVICE_NAME=foo
      - SERVICE_CHECK_HTTP=/ping
      - SERVICE_CHECK_INTERVAL=15s
      - SERVICE_80_NAME=foo
      - SERVICE_TAGS=golang,should-work,dummy

        #bar:
        #build:
        #context: .
        #dockerfile: Dockerfile.demo-service
        #environment:
        #- SERVICE_NAME=bar
        #- SERVICE_CHECK_HTTP=/fail
        #- SERVICE_CHECK_INTERVAL=15s
        #- SERVICE_80_NAME=bar
        #- SERVICE_TAGS=golang,should-fail,dummy

  gateway:
    image: registry.safecu.org/gateway-service:1.0.0-rc1
    environment:
      - CORE_SERVICE_URL=http://nginx/core/v1
      - SERVICE_CHECK_HTTP=/ping
      - SERVICE_CHECK_INTERVAL=15s
      - SERVICE_NAME=gateway
      - SERVICE_TAGS=gateway,graphql,nodejs

  core:
    image: registry.safecu.org/core-catalog-service:1.0.0-rc2
    environment:
      - SERVICE_NAME=core
      - SERVICE_TAGS=core,pathways,nodejs
      - SERVICE_CHECK_HTTP=/ping
      - SERVICE_CHECK_INTERVAL=15s






